%%
%% This is file `dotnet.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% dotnet.dtx  (with options: `package')
%%   Copyright (C) 2003 Jens R. Calame
%% 
%%   This package correctly formats source code written in
%%   Microsoft .NET programming languages using LaTeX listings package by
%%   Carsten Heinz.
%% 
%%   Supported languages:
%%   - C-Sharp
%%   - Managed C++
%%   - VB.NET
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{dotnet}[2003/06/11 v1.0 LaTeX dotnet package]
\RequirePackageWithOptions{listings}

\lstdefinelanguage{csharp}
  {keywords={abstract, base, bool, break, byte, case, catch, char,%
             checked, class, const, continue, decimal, default,%
     delegate, do, double, else, enum, event, explicit,%
     extern, false, finally, fixed, float, for, foreach, get,%
     goto, if, implicit, in, int, interface, internal, is,%
     lock, as, long, namespace, new, null, object, operator,%
     out, override, parents, private, protected, public,%
     readonly, ref, return, sbyte, sealed, set, short, sizeof,%
             stackalloc, static, string, struct, switch, this, throw,%
     true, try, typeof, uint, ulong, unchecked, unsafe,%
     ushort, using, value, virtual, void, volatile, while%
   },%
   sensitive=true,%
   morecomment=[l]//,%
   morecomment=[s]{/*}{*/},%
   string={"}%
  }[keywords,comments,strings]

\lstdefinelanguage[Managed]{C++}[Visual]{C++}
  {morekeywords={__abstract, __box, __delegate, __event, __finally,%
                 __gc, __identifier, __interface, __nogc, __pin,%
 __property, __sealed, __try_cast, __typeof, __value%
   },%
   moredirectives={using}%
  }

\lstdefinelanguage{vbnet}
  {keywords={AddHandler, AddressOf, AndAlso, Alias, And, Ansi, As,%
                 Assembly, Auto, Boolean, ByRef, Byte, ByVal, Call,%
 Case, Catch, CBool, CByte, CChar, CDate, CDec, CDbl,%
 Char, CInt, Class, CLng, CObj, Const, CShort, CSng,%
 CStr, CType, Date, Decimal, Declare, Default,%
 Delegate, Dim, DirectCast, Do, Double, Each, Else,%
 ElseIf, End, Enum, Erase, Error, Event, Exit, False,%
 Finally, For, Friend, Function, Get, GetType, GoTo,%
 Handles, If, Implements, Imports, In, Inherits,%
 Integer, Interface, Is, Let, Lib, Like, Long, Loop,%
 Me, Mod, Module, MustInherit, MustOverride, MyBase,%
 MyClass, Namespace, New, Next, Not, Nothing,%
 NotInheritable, NotOverridable, Object, On, Option,%
 Optional, Or, OrElse, Overloads, Overridable,%
 Overrides, ParamArray, Preserve, Private, Property,%
 Protected, Public, RaiseEvent, ReadOnly, ReDim, Rem,%
                 RemoveHandler, Resume, Return, Select, Set, Shadows,%
 Shared, Short, Single, Static, Step, Stop, String,%
 Structure, Sub, SyncLock, Then, Throw, To, True, Try,%
 TypeOf, Unicode, Until, Variant, When, While, With,%
 WithEvents, WriteOnly, Xor%
   },%
   sensitive=false,%
   morecomment=[l]\',%
   morestring=[b]"%
  }[keywords,comments,strings]

\lstdefinelanguage{jsharp}{Java}{}

\endinput
%%
%% End of file `dotnet.sty'.
